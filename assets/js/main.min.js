'use strict';

/*! [PROJECT_NAME] | Suitmedia */

(function (window, document, undefined) {

    var path = {
        css: myPrefix + 'assets/css/',
        js: myPrefix + 'assets/js/vendor/'
    };

    var assets = {
        _objectFit: path.js + 'object-fit-images.min.js'
    };

    var app = angular.module('myApp', ['ui.router']);

    var isActive = 'is-active';

    var Site = {
        enableActiveStateMobile: function enableActiveStateMobile() {
            if (document.addEventListener) {
                document.addEventListener('touchstart', function () {}, true);
            }
        },
        WPViewportFix: function WPViewportFix() {
            if ('-ms-user-select' in document.documentElement.style && navigator.userAgent.match(/IEMobile/)) {
                var style = document.createElement('style');
                var fix = document.createTextNode('@-ms-viewport{width:auto!important}');

                style.appendChild(fix);
                document.head.appendChild(style);
            }
        },
        objectFitPolyfill: function objectFitPolyfill() {
            load(assets._objectFit).then(function () {
                objectFitImages();
            });
        }
    };

    Promise.all([]).then(function () {
        for (var fn in Site) {
            Site[fn]();
        }
        window.Site = Site;
    });

    function exist(selector) {
        return new Promise(function (resolve, reject) {
            var $elem = $(selector);

            if ($elem.length) {
                resolve($elem);
            } else {
                reject('no element found for ' + selector);
            }
        });
    }

    function load(url) {
        return new Promise(function (resolve, reject) {
            Modernizr.load({
                load: url,
                complete: resolve
            });
        });
    }

    function loadJSON(url) {
        return new Promise(function (resolve, reject) {
            fetch(url).then(function (res) {
                if (res.ok) {
                    resolve(res.json());
                } else {
                    reject('Network response not ok');
                }
            }).catch(function (e) {
                reject(e);
            });
        });
    }

    app.controller('styleguidesCtrl', ['$scope', function ($scope) {
        //$scope.current = "state"
    }]);

    app.config(function ($stateProvider) {
        var homePage = {
            name: 'home',
            url: '/',
            templateUrl: 'home.html'
        };

        var cssPage = {
            name: 'css',
            url: '/css',
            templateUrl: 'css.html'
        };

        var htmlPage = {
            name: 'html',
            url: '/html',
            templateUrl: 'html.html'
        };

        var toolsPage = {
            name: 'tools',
            url: '/tools',
            templateUrl: 'tools.html'
        };

        var jsPage = {
            name: 'js',
            url: '/js',
            templateUrl: 'js.html'
        };

        $stateProvider.state(homePage);
        $stateProvider.state(cssPage);
        $stateProvider.state(htmlPage);
        $stateProvider.state(jsPage);
        $stateProvider.state(toolsPage);
    });
})(window, document);